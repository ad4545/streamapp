pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            // If you want to run Docker in Docker
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages {
        stage('Compilation') {
            steps {
                sh 'mvn compile'
            }
            post{
              failure {
                error('Compilation failed. Stopping the build.')
            }
            }
        }
        stage('Test & Build') {
            steps {
                sh 'mvn test && mvn clean package'
            }
        }
        stage('Static Code Analysis') {
          environment {
             SONAR_URL = "http://13.201.5.193:9000"
          }
            steps {
            withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
               }
            }
        }
        stage('Build and Push Docker Image') {
          environment {
            DOCKER_IMAGE = "adkumar123/real-time-ad-stream:${BUILD_NUMBER}"
            // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
            REGISTRY_CREDENTIALS = credentials('docker-cred')
          }
            steps {
              script {
                sh 'docker build -t ${DOCKER_IMAGE} .'
                def dockerImage = docker.image("${DOCKER_IMAGE}")
                docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                    dockerImage.push()
                }
            }
          }
        }

      // stage('Update Deployment File in Another Repo') {
      //     environment {
      //       TARGET_GIT_REPO = "https://github.com/ad4545/ecom_manifests"
      //       TARGET_GIT_BRANCH = "main"
      //       GIT_USER_NAME = "ad4545"
      //     }
      //     steps {
      //       withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
      //           script{
      //              def repoDir = "deployment-repo-${BUILD_NUMBER}"

      //              sh '''
      //                 if [ -d "${repoDir}" ]; then
      //                   rm -rf ${repoDir}
      //                 fi
      //                   git clone -b ${TARGET_GIT_BRANCH} ${TARGET_GIT_REPO} deployment-repo-${BUILD_NUMBER}
      //                   cd deployment-repo-${BUILD_NUMBER}
      //               '''
                    
                    
      //               sh '''
                        
      //                   sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" manifests/deployment.yaml
      //                   git config user.email "adarsh.kumar@sevenrobotics.in"
      //                   git config user.name "Adarsh Kumar"
      //                   git add manifests/deployment.yaml
      //                   git commit -m "Update deployment image to version ${BUILD_NUMBER}"
      //                   git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/ecom_manifests HEAD:${TARGET_GIT_BRANCH} -f
      //               '''

      //           }    
      //       }
      //     }
      //   }
         
        // Add other stages as needed

        stage('Git Checkout') {
            agent{
              docker {
                  image 'adkumar123/ecom-docker-agent:latest'
             }
            }
            steps {
                script {
                    // Checkout another repository
                    git branch: 'main',
                        url: 'https://github.com/ad4545/ecom_manifests'
                }
                // Run commands in the context of the checked-out repository
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                sh '''
                        
                      sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" manifests/deployment.yaml
                      git config user.email "adarsh.kumar@sevenrobotics.in"
                      git config user.name "Adarsh Kumar"
                      git add manifests/deployment.yaml
                      git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                      git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/ecom_manifests HEAD:main -f
                   '''
            }
            }
        }
    }
}


