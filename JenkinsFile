pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            // If you want to run Docker in Docker
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }
    stages {
        stage('Compilation') {
            steps {
                sh 'mvn compile'
            }
            post{
              failure {
                error('Compilation failed. Stopping the build.')
            }
            }
        }
        stage('Test & Build') {
            steps {
                sh 'mvn test && mvn clean package'
            }
        }
        stage('Static Code Analysis') {
          environment {
             SONAR_URL = "http://13.201.5.193:9000"
          }
            steps {
            withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
                sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
               }
            }
        }
        stage('Build and Push Docker Image') {
          environment {
            DOCKER_IMAGE = "adkumar123/real-time-ad-stream:${BUILD_NUMBER}"
            // DOCKERFILE_LOCATION = "java-maven-sonar-argocd-helm-k8s/spring-boot-app/Dockerfile"
            REGISTRY_CREDENTIALS = credentials('docker-cred')
          }
            steps {
              script {
                sh 'docker build -t ${DOCKER_IMAGE} .'
                def dockerImage = docker.image("${DOCKER_IMAGE}")
                docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
                    dockerImage.push()
                }
            }
          }
        }
        
        stage('Trivy Scan') {
        steps {
        sh '''
           apt-get update
           apt-get install -y wget
           wget https://github.com/aquasecurity/trivy/releases/download/v0.18.3/trivy_0.18.3_Linux-64bit.deb
           dpkg -i trivy_0.18.3_Linux-64bit.deb
           rm trivy_0.18.3_Linux-64bit.deb
           trivy image --exit-code 1 --severity HIGH,CRITICAL adkumar123/real-time-ad-stream:${BUILD_NUMBER}
        '''
          }
          post {
                failure {
                    error('Trivy scan failed due to detected vulnerabilities.')
                }
         }
       }
        // stage('Update Deployment') {
        //     steps {
        //         script {
        //             // Checkout another repository
        //             git branch: 'main',
        //                 url: 'https://github.com/ad4545/ecom_manifests'
        //         }
        //         // Run commands in the context of the checked-out repository
        //         withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
        //         sh '''
        //               rm -rf target
        //               git config user.email "adarsh.kumar@sevenrobotics.in"
        //               git config user.name "Adarsh Kumar"
        //               BUILD_NUMBER=${BUILD_NUMBER}
        //               sed -i "s|\\(image: adkumar123/real-time-ad-stream:\\)\\([0-9]*\\)|\\1${BUILD_NUMBER}|g" manifests/deployment.yaml
        //               git add .
        //               git commit -m "Update deployment image to version ${BUILD_NUMBER}"
        //               git push https://${GITHUB_TOKEN}@github.com/ad4545/ecom_manifests HEAD:main -f
        //            '''
        //     }
        //     }
        // }
       
    }
}




